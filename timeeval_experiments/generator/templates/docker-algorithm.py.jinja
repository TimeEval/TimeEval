# DO NOT EDIT THIS FILE!
# This file was automatically generated using the timeeval_experiments.generator from the template:
# timeeval_experiments/generator/templates/docker-algorithm.py.jinja
from durations import Duration
from typing import Any, Dict, Optional

from timeeval import Algorithm, TrainingType, InputDimensionality
from timeeval.adapters import DockerAdapter
from timeeval.params import ParameterConfig
{% if post_process_block is defined %}

import numpy as np


{% endif %}
{{ post_process_block }}

_{{ image_name }}_parameters: Dict[str, Dict[str, Any]] = {% if parameters_string is defined -%}
    {{ parameters_string }}
{% else -%}
    {}
{% endif %}


def {{ image_name }}(params: Optional[ParameterConfig] = None, skip_pull: bool = {{ skip_pull }}, timeout: Optional[Duration] = None) -> Algorithm:
    """{{ name }}

    {{ description }}

    {% if not available %}
    .. warning::
       The implementation of this algorithm is not publicly available (closed source).
       Thus, TimeEval will fail to download the Docker image and the algorithm will not be available.
       Please contact the authors of the algorithm for the implementation and build the algorithm Docker image yourself.
    {% endif %}

    {% if parameters_string is defined %}
    **Algorithm Parameters:**

    {% for param in parameters %}
    {{  parameters[param].name }}: {{ parameters[param].type }}
        {{ parameters[param].description }} (default: ``{{ parameters[param].defaultValue }}``)
    {% endfor %}{% endif %}

    Parameters
    ----------
    params : Optional[ParameterConfig]
        Parameter configuration for the algorithm
    skip_pull : bool
        Set to ``True`` to skip pulling the Docker image and use a local image instead.
        If the image is not present locally, this will raise an error.
    timeout : Optional[Duration]
        Set an individual execution and training timeout for this algorithm.
        This will overwrite the global timeouts set using :class:`~timeeval.ResourceConstraints`.

    Returns
    -------
    ~timeeval.Algorithm
        A correctly configured :class:`~timeeval.Algorithm` object for the {{ name }} algorithm.
    """
    return Algorithm(
        name="{{ name }}",
        main=DockerAdapter(
            image_name="ghcr.io/timeeval/{{ image_name }}",
{% if image_tag is defined %}
            tag="{{ image_tag }}",
{% endif %}
            skip_pull=skip_pull,
            timeout=timeout,
            group_privileges="{{ group_privileges|default("akita") }}",
{% if memory_limit_overwrite is defined %}
            memory_limit_overwrite="{{ memory_limit_overwrite }}",
{% endif %}
{% if cpu_limit_overwrite is defined %}
            cpu_limit_overwrite="{{ cpu_limit_overwrite }}",
{% endif %}
        ),
        preprocess={{ preprocess|default(None) }},
        postprocess={{ postprocess|default(None) }},
        param_schema=_{{ image_name }}_parameters,
        param_config=params or ParameterConfig.defaults(),
        data_as_file=True,
        training_type={% if training_type|lower == "unsupervised" -%}
                          TrainingType.UNSUPERVISED
                      {%- elif training_type|lower == "semi-supervised" -%}
                          TrainingType.SEMI_SUPERVISED
                      {%- else -%}
                          TrainingType.SUPERVISED
                      {%- endif %},
        input_dimensionality=InputDimensionality("{{ input_dimensionality|lower }}")
    )
