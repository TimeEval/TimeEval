# DO NOT EDIT THIS FILE!
# This file was automatically generated using the timeeval_experiments.generator from the template:
# timeeval_experiments/generator/templates/docker-algorithm.py.jinja
from durations import Duration
from typing import Any, Dict, Optional

from timeeval import Algorithm, TrainingType, InputDimensionality
from timeeval.adapters import DockerAdapter
from timeeval.params import ParameterConfig


_health_esn_parameters: Dict[str, Dict[str, Any]] = {
 "activation": {
  "defaultValue": "tanh",
  "description": "Activation function used for the ESN.",
  "name": "activation",
  "type": "enum[tanh,sigmoid]"
 },
 "connectivity": {
  "defaultValue": 0.25,
  "description": "How dense the units in the reservoir are connected (= percentage of non-zero weights)",
  "name": "connectivity",
  "type": "float"
 },
 "linear_hidden_size": {
  "defaultValue": 500,
  "description": "Hidden units in ESN reservoir.",
  "name": "linear_hidden_size",
  "type": "int"
 },
 "prediction_window_size": {
  "defaultValue": 20,
  "description": "Window of predicted points in the future.",
  "name": "prediction_window_size",
  "type": "int"
 },
 "random_state": {
  "defaultValue": 42,
  "description": "Seed for the random number generator",
  "name": "random_state",
  "type": "int"
 },
 "spectral_radius": {
  "defaultValue": 0.6,
  "description": "Factor used for random initialization of ESN neural connections.",
  "name": "spectral_radius",
  "type": "float"
 }
}


def health_esn(params: Optional[ParameterConfig] = None, skip_pull: bool = False, timeout: Optional[Duration] = None) -> Algorithm:
    """HealthESN

    Implementation of https://doi.org/10.1007/s00521-018-3747-z


    **Algorithm Parameters:**

    linear_hidden_size: int
        Hidden units in ESN reservoir. (default: ``500``)
    prediction_window_size: int
        Window of predicted points in the future. (default: ``20``)
    connectivity: float
        How dense the units in the reservoir are connected (= percentage of non-zero weights) (default: ``0.25``)
    spectral_radius: float
        Factor used for random initialization of ESN neural connections. (default: ``0.6``)
    activation: enum[tanh,sigmoid]
        Activation function used for the ESN. (default: ``tanh``)
    random_state: int
        Seed for the random number generator (default: ``42``)

    Parameters
    ----------
    params : Optional[ParameterConfig]
        Parameter configuration for the algorithm
    skip_pull : bool
        Set to ``True`` to skip pulling the Docker image and use a local image instead.
        If the image is not present locally, this will raise an error.
    timeout : Optional[Duration]
        Set an individual execution and training timeout for this algorithm.
        This will overwrite the global timeouts set using :class:`~timeeval.ResourceConstraints`.

    Returns
    -------
    ~timeeval.Algorithm
        A correctly configured :class:`~timeeval.Algorithm` object for the HealthESN algorithm.
    """
    return Algorithm(
        name="HealthESN",
        main=DockerAdapter(
            image_name="ghcr.io/timeeval/health_esn",
            tag="0.3.0",
            skip_pull=skip_pull,
            timeout=timeout,
            group_privileges="akita",
        ),
        preprocess=None,
        postprocess=None,
        param_schema=_health_esn_parameters,
        param_config=params or ParameterConfig.defaults(),
        data_as_file=True,
        training_type=TrainingType.SEMI_SUPERVISED,
        input_dimensionality=InputDimensionality("multivariate")
    )
