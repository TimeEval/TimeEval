# DO NOT EDIT THIS FILE!
# This file was automatically generated using the timeeval_experiments.generator from the template:
# timeeval_experiments/generator/templates/docker-algorithm.py.jinja
from durations import Duration
from typing import Any, Dict, Optional

from timeeval import Algorithm, TrainingType, InputDimensionality
from timeeval.adapters import DockerAdapter
from timeeval.params import ParameterConfig


_triple_es_parameters: Dict[str, Dict[str, Any]] = {
 "period": {
  "defaultValue": 100,
  "description": "number of time units at which events happen regularly/periodically",
  "name": "period",
  "type": "int"
 },
 "random_state": {
  "defaultValue": 42,
  "description": "Seed for random number generation.",
  "name": "random_state",
  "type": "int"
 },
 "seasonal": {
  "defaultValue": "add",
  "description": "type of seasonal component",
  "name": "seasonal",
  "type": "enum[add, mul]"
 },
 "train_window_size": {
  "defaultValue": 200,
  "description": "size of each TripleES model to predict the next timestep",
  "name": "train_window_size",
  "type": "int"
 },
 "trend": {
  "defaultValue": "add",
  "description": "type of trend component",
  "name": "trend",
  "type": "enum[add, mul]"
 }
}


def triple_es(params: Optional[ParameterConfig] = None, skip_pull: bool = False, timeout: Optional[Duration] = None) -> Algorithm:
    """Triple ES (Holt-Winter's)

    Implementation of http://www.diva-portal.org/smash/get/diva2:1198551/FULLTEXT02.pdf


    **Algorithm Parameters:**

    train_window_size: int
        size of each TripleES model to predict the next timestep (default: ``200``)
    period: int
        number of time units at which events happen regularly/periodically (default: ``100``)
    trend: enum[add, mul]
        type of trend component (default: ``add``)
    seasonal: enum[add, mul]
        type of seasonal component (default: ``add``)
    random_state: int
        Seed for random number generation. (default: ``42``)

    Parameters
    ----------
    params : Optional[ParameterConfig]
        Parameter configuration for the algorithm
    skip_pull : bool
        Set to ``True`` to skip pulling the Docker image and use a local image instead.
        If the image is not present locally, this will raise an error.
    timeout : Optional[Duration]
        Set an individual execution and training timeout for this algorithm.
        This will overwrite the global timeouts set using :class:`~timeeval.ResourceConstraints`.

    Returns
    -------
    ~timeeval.Algorithm
        A correctly configured :class:`~timeeval.Algorithm` object for the Triple ES (Holt-Winter's) algorithm.
    """
    return Algorithm(
        name="Triple ES (Holt-Winter's)",
        main=DockerAdapter(
            image_name="ghcr.io/timeeval/triple_es",
            tag="0.3.0",
            skip_pull=skip_pull,
            timeout=timeout,
            group_privileges="akita",
        ),
        preprocess=None,
        postprocess=None,
        param_schema=_triple_es_parameters,
        param_config=params or ParameterConfig.defaults(),
        data_as_file=True,
        training_type=TrainingType.UNSUPERVISED,
        input_dimensionality=InputDimensionality("univariate")
    )
