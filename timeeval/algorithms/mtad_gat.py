# DO NOT EDIT THIS FILE!
# This file was automatically generated using the timeeval_experiments.generator from the template:
# timeeval_experiments/generator/templates/docker-algorithm.py.jinja
from durations import Duration
from typing import Any, Dict, Optional

from timeeval import Algorithm, TrainingType, InputDimensionality
from timeeval.adapters import DockerAdapter
from timeeval.params import ParameterConfig

import numpy as np


from timeeval.utils.window import ReverseWindowing
# post-processing for MTAD-GAT
def post_mtad_gat(scores: np.ndarray, args: dict) -> np.ndarray:
    window_size = args.get("hyper_params", {}).get("window_size", 20)
    return ReverseWindowing(window_size=window_size + 1).fit_transform(scores)


_mtad_gat_parameters: Dict[str, Dict[str, Any]] = {
 "batch_size": {
  "defaultValue": 64,
  "description": "Number of data points propagated in parallel",
  "name": "batch_size",
  "type": "int"
 },
 "context_window_size": {
  "defaultValue": 5,
  "description": "Window for mean in SR cleaning",
  "name": "context_window_size",
  "type": "int"
 },
 "early_stopping_delta": {
  "defaultValue": 0.05,
  "description": "If 1 - (loss / last_loss) is less than `delta` for `patience` epochs, stop",
  "name": "early_stopping_delta",
  "type": "float"
 },
 "early_stopping_patience": {
  "defaultValue": 10,
  "description": "If 1 - (loss / last_loss) is less than `delta` for `patience` epochs, stop",
  "name": "early_stopping_patience",
  "type": "int"
 },
 "epochs": {
  "defaultValue": 1,
  "description": "Number of times the algorithm trains on the dataset",
  "name": "epochs",
  "type": "int"
 },
 "gamma": {
  "defaultValue": 0.8,
  "description": "Importance factor for posterior in scoring",
  "name": "gamma",
  "type": "float"
 },
 "kernel_size": {
  "defaultValue": 7,
  "description": "Kernel size for 1D-convolution",
  "name": "kernel_size",
  "type": "int"
 },
 "latent_size": {
  "defaultValue": 300,
  "description": "Embedding size in VAE",
  "name": "latent_size",
  "type": "int"
 },
 "learning_rate": {
  "defaultValue": 0.001,
  "description": "Learning rate for training",
  "name": "learning_rate",
  "type": "float"
 },
 "linear_layer_shape": {
  "defaultValue": [
   300,
   300,
   300
  ],
  "description": "Architecture of FC-NN",
  "name": "linear_layer_shape",
  "type": "List[int]"
 },
 "mag_window_size": {
  "defaultValue": 3,
  "description": "Window size for sliding window average calculation",
  "name": "mag_window_size",
  "type": "int"
 },
 "random_state": {
  "defaultValue": 42,
  "description": "Seed for the random number generator",
  "name": "random_state",
  "type": "int"
 },
 "score_window_size": {
  "defaultValue": 40,
  "description": "Window size for anomaly scoring",
  "name": "score_window_size",
  "type": "int"
 },
 "split": {
  "defaultValue": 0.8,
  "description": "Train-validation split for early stopping",
  "name": "split",
  "type": "float"
 },
 "threshold": {
  "defaultValue": 3,
  "description": "Threshold for SR cleaning",
  "name": "threshold",
  "type": "float"
 },
 "window_size": {
  "defaultValue": 20,
  "description": "Window size for windowing of Time Series",
  "name": "window_size",
  "type": "int"
 }
}


def mtad_gat(params: Optional[ParameterConfig] = None, skip_pull: bool = False, timeout: Optional[Duration] = None) -> Algorithm:
    """MTAD-GAT

    Implementation of http://arxiv.org/abs/2009.02040


    **Algorithm Parameters:**

    mag_window_size: int
        Window size for sliding window average calculation (default: ``3``)
    score_window_size: int
        Window size for anomaly scoring (default: ``40``)
    threshold: float
        Threshold for SR cleaning (default: ``3``)
    context_window_size: int
        Window for mean in SR cleaning (default: ``5``)
    kernel_size: int
        Kernel size for 1D-convolution (default: ``7``)
    learning_rate: float
        Learning rate for training (default: ``0.001``)
    epochs: int
        Number of times the algorithm trains on the dataset (default: ``1``)
    batch_size: int
        Number of data points propagated in parallel (default: ``64``)
    window_size: int
        Window size for windowing of Time Series (default: ``20``)
    gamma: float
        Importance factor for posterior in scoring (default: ``0.8``)
    latent_size: int
        Embedding size in VAE (default: ``300``)
    linear_layer_shape: List[int]
        Architecture of FC-NN (default: ``[300, 300, 300]``)
    early_stopping_patience: int
        If 1 - (loss / last_loss) is less than `delta` for `patience` epochs, stop (default: ``10``)
    early_stopping_delta: float
        If 1 - (loss / last_loss) is less than `delta` for `patience` epochs, stop (default: ``0.05``)
    split: float
        Train-validation split for early stopping (default: ``0.8``)
    random_state: int
        Seed for the random number generator (default: ``42``)

    Parameters
    ----------
    params : Optional[ParameterConfig]
        Parameter configuration for the algorithm
    skip_pull : bool
        Set to ``True`` to skip pulling the Docker image and use a local image instead.
        If the image is not present locally, this will raise an error.
    timeout : Optional[Duration]
        Set an individual execution and training timeout for this algorithm.
        This will overwrite the global timeouts set using :class:`~timeeval.ResourceConstraints`.

    Returns
    -------
    ~timeeval.Algorithm
        A correctly configured :class:`~timeeval.Algorithm` object for the MTAD-GAT algorithm.
    """
    return Algorithm(
        name="MTAD-GAT",
        main=DockerAdapter(
            image_name="ghcr.io/timeeval/mtad_gat",
            tag="0.3.0",
            skip_pull=skip_pull,
            timeout=timeout,
            group_privileges="akita",
        ),
        preprocess=None,
        postprocess=post_mtad_gat,
        param_schema=_mtad_gat_parameters,
        param_config=params or ParameterConfig.defaults(),
        data_as_file=True,
        training_type=TrainingType.SEMI_SUPERVISED,
        input_dimensionality=InputDimensionality("multivariate")
    )
