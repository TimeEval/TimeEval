# DO NOT EDIT THIS FILE!
# This file was automatically generated using the timeeval_experiments.generator from the template:
# timeeval_experiments/generator/templates/docker-algorithm.py.jinja
from durations import Duration
from typing import Any, Dict, Optional

from timeeval import Algorithm, TrainingType, InputDimensionality
from timeeval.adapters import DockerAdapter
from timeeval.params import ParameterConfig


_fft_parameters: Dict[str, Dict[str, Any]] = {
 "context_window_size": {
  "defaultValue": 21,
  "description": "Centered window of neighbors to consider for the calculation of local outliers' z_scores",
  "name": "context_window_size",
  "type": "int"
 },
 "fft_parameters": {
  "defaultValue": 5,
  "description": "Number of parameters to be used in IFFT for creating the fit.",
  "name": "fft_parameters",
  "type": "int"
 },
 "local_outlier_threshold": {
  "defaultValue": 0.6,
  "description": "Outlier threshold in multiples of sigma for local outliers",
  "name": "local_outlier_threshold",
  "type": "float"
 },
 "max_anomaly_window_size": {
  "defaultValue": 50,
  "description": "Maximum size of outlier regions.",
  "name": "max_anomaly_window_size",
  "type": "int"
 },
 "max_sign_change_distance": {
  "defaultValue": 10,
  "description": "Maximum gap between two closed oppositely signed local outliers to detect a sign change for outlier region grouping.",
  "name": "max_sign_change_distance",
  "type": "int"
 },
 "random_state": {
  "defaultValue": 42,
  "description": "Seed for the random number generator",
  "name": "random_state",
  "type": "int"
 }
}


def fft(params: Optional[ParameterConfig] = None, skip_pull: bool = False, timeout: Optional[Duration] = None) -> Algorithm:
    """FFT

    Implementation of https://dl.acm.org/doi/10.5555/1789574.1789615 proudly provided by members of the HPI AKITA project.


    **Algorithm Parameters:**

    fft_parameters: int
        Number of parameters to be used in IFFT for creating the fit. (default: ``5``)
    context_window_size: int
        Centered window of neighbors to consider for the calculation of local outliers' z_scores (default: ``21``)
    local_outlier_threshold: float
        Outlier threshold in multiples of sigma for local outliers (default: ``0.6``)
    max_anomaly_window_size: int
        Maximum size of outlier regions. (default: ``50``)
    max_sign_change_distance: int
        Maximum gap between two closed oppositely signed local outliers to detect a sign change for outlier region grouping. (default: ``10``)
    random_state: int
        Seed for the random number generator (default: ``42``)

    Parameters
    ----------
    params : Optional[ParameterConfig]
        Parameter configuration for the algorithm
    skip_pull : bool
        Set to ``True`` to skip pulling the Docker image and use a local image instead.
        If the image is not present locally, this will raise an error.
    timeout : Optional[Duration]
        Set an individual execution and training timeout for this algorithm.
        This will overwrite the global timeouts set using :class:`~timeeval.ResourceConstraints`.

    Returns
    -------
    ~timeeval.Algorithm
        A correctly configured :class:`~timeeval.Algorithm` object for the FFT algorithm.
    """
    return Algorithm(
        name="FFT",
        main=DockerAdapter(
            image_name="ghcr.io/timeeval/fft",
            tag="0.3.0",
            skip_pull=skip_pull,
            timeout=timeout,
            group_privileges="akita",
        ),
        preprocess=None,
        postprocess=None,
        param_schema=_fft_parameters,
        param_config=params or ParameterConfig.defaults(),
        data_as_file=True,
        training_type=TrainingType.UNSUPERVISED,
        input_dimensionality=InputDimensionality("univariate")
    )
